import subprocess

import matplotlib.pyplot as plt

# model = ["vgg9", "resnet20"]
# quant = ["fwn", "bwn", "sq_bwn", "twn", "sq_twn", "tnn", "sq_tnn"]
# dataset = ["cifar10", "cifar100"]

model = ["resnet20"]
quant = ["fwn", "bwn", "sq_bwn", "twn", "sq_twn"]
quant = ["sq_twn"]
dataset = ["cifar10"]

def test():
    for k in dataset:
        for i in model:
            for j in quant:
                subprocess.run(["python", "main.py", "--model", f"{i}", "--quant", f"{j}", "--dataset", f"{k}"])


# quant = ["sq_bwn", "sq_twn"]
# e_type = ["default", "one_minus_invert"]
# prob_type = ["linear", "softmax", "sigmoid"]

# def test2():
#     for q in quant:
#         for e in e_type:
#             for p in prob_type:
#                 subprocess.run(["python", "main.py", "--quant", q,
#                                 "--e_type", e, "--prob_type", p])
#         subprocess.run(["python", "main.py", "--quant", q,
#                         "--e_type", "default", "--prob_type", "linear"])



# loss_cifar100 = {"fwn": [3.142854, 2.562931, 2.170525, 2.221151, 2.085258, 2.140062, 2.051794, 2.199548, 2.321876, 2.401502, 2.743698, 2.640098, 2.772491, 2.771185, 2.763951, 3.031754, 2.97057, 2.948613, 2.938476, 2.977451, 2.972505, 3.003387, 3.110925, 3.135991, 3.212332, 3.182451, 3.098121, 2.978556, 3.161916, 3.159241, 2.65651, 2.664808, 2.662147, 2.642187, 2.652272, 2.659182, 2.643931, 2.637196, 2.620349, 2.612391, 2.601011, 2.584489, 2.58175, 2.577267, 2.5614, 2.559771, 2.538965, 2.5195, 2.525781, 2.501885, 2.489253, 2.476258, 2.471013, 2.463129, 2.454787, 2.44788, 2.425452, 2.409377, 2.41271, 2.395209, 2.398661, 2.386978, 2.398204, 2.383522, 2.383929, 2.390092, 2.382735, 2.386827, 2.392513, 2.387575, 2.381931, 2.380984, 2.398939, 2.382921, 2.371752, 2.387842, 2.37263, 2.381731, 2.381585, 2.376185, 2.37168, 2.372958, 2.362367, 2.377552, 2.360593, 2.369198, 2.362009, 2.373683, 2.369239, 2.362987],
#                 "bwn": [3.258513, 2.615468, 2.435153, 2.507228, 2.2829, 2.286069, 2.202549, 2.204949, 2.265448, 2.310102, 2.179793, 2.329735, 2.230499, 2.303089, 2.309644, 2.506817, 2.473268, 2.457924, 2.348552, 2.479181, 2.473867, 2.525069, 2.48545, 2.440352, 2.51712, 2.582015, 2.40949, 2.428441, 2.459574, 2.431029, 2.181745, 2.226689, 2.251168, 2.277959, 2.292237, 2.302836, 2.308625, 2.318335, 2.309656, 2.320253, 2.33102, 2.331699, 2.334294, 2.337381, 2.333459, 2.336446, 2.337929, 2.335749, 2.334822, 2.346064, 2.339489, 2.343386, 2.348311, 2.349833, 2.346593, 2.353659, 2.350468, 2.355372, 2.351318, 2.349344, 2.339433, 2.342378, 2.353349, 2.349127, 2.354542, 2.346068, 2.342893, 2.356768, 2.349321, 2.342067, 2.353513, 2.35835, 2.34979, 2.345735, 2.355333, 2.354105, 2.363278, 2.361498, 2.354262, 2.358443, 2.368804, 2.357146, 2.358943, 2.35982, 2.361329, 2.352513, 2.355538, 2.365943, 2.353328, 2.366347],
#                 "sq_bwn": [3.57735, 3.158933, 2.952, 3.247937, 3.631045, 2.929458, 2.989043, 3.165737, 2.917542, 2.935262, 3.123206, 2.834734, 3.091636, 3.584642, 3.245203, 3.433762, 3.676909, 3.853165, 3.633084, 3.886645, 3.146243, 3.475971, 3.391211, 4.211762, 4.249856, 5.161236, 3.443823, 3.679894, 4.383655, 4.288857, 2.752118, 2.240017, 2.293737, 2.302626, 2.38061, 2.447011, 2.441689, 2.478261, 2.478199, 2.528978, 2.512259, 2.553979, 2.532986, 2.551762, 2.552598, 2.599737, 2.552225, 2.579607, 2.582152, 2.55244, 2.585527, 2.574317, 2.578075, 2.57568, 2.579456, 2.579989, 2.609465, 2.582938, 2.585359, 2.591739, 2.622188, 2.615007, 2.59776, 2.615855, 2.596169, 2.595004, 2.59587, 2.615142, 2.61379, 2.605145, 2.601454, 2.626932, 2.60771, 2.613664, 2.598011, 2.604412, 2.605549, 2.603876, 2.589676, 2.611344, 2.61469, 2.596303, 2.603837, 2.604071, 2.605227, 2.611374, 2.603656, 2.604058, 2.596908, 2.601686],
#                 # "twn": ,
#                 # "sqn_twn": ,
#                 "tnn": [4.821738, 4.808343, 4.803705, 4.737453, 4.717909, 4.700168, 4.69075, 4.664175, 4.66488, 4.694931, 4.65281, 4.67548, 4.654237, 4.630308, 4.629553, 4.56198, 4.290017, 4.178185, 4.094904, 3.870478, 3.56146, 3.31803, 3.104252, 2.789153, 2.744957, 2.559666, 2.538311, 2.581176, 2.477595, 2.484099, 2.254694, 2.380643, 2.491868, 2.61067, 2.775075, 2.922717, 3.115459, 3.277915, 3.547963, 3.811564, 4.023838, 4.306682, 4.450993, 4.672154, 4.899662, 5.019432, 5.192503, 5.26015, 5.401856, 5.602701, 5.685584, 5.805848, 5.828106, 5.905465, 5.975354, 6.084011, 6.016683, 6.012438, 6.126178, 6.083207, 6.099327, 6.061438, 6.09099, 6.056015, 6.084818, 6.136809, 6.077541, 6.103126, 6.133879, 6.16982, 6.137951, 6.155185, 6.154385, 6.117949, 6.141486, 6.181462, 6.113702, 6.18694, 6.199251, 6.220454, 6.230743, 6.200377, 6.241338, 6.165298, 6.222535, 6.214756, 6.244061, 6.170157, 6.256925, 6.219365],
#                 "sq_tnn": [4.812963, 4.839582, 4.721642, 4.738978, 4.663334, 4.657022, 4.635005, 4.643906, 4.646129, 4.681211, 4.629856, 4.637208, 4.630112, 4.610878, 4.250298, 4.125737, 3.818423, 3.723604, 3.367673, 3.166937, 2.925639, 2.931767, 2.780703, 2.789782, 2.568168, 2.488181, 2.47282, 2.39546, 2.618151, 2.386057, 2.100329, 2.171652, 2.225467, 2.271307, 2.364048, 2.424131, 2.51392, 2.633015, 2.682674, 2.796455, 2.928454, 3.064422, 3.21607, 3.336841, 3.49415, 3.619918, 3.789164, 3.939601, 4.069835, 4.227669, 4.365796, 4.441592, 4.533047, 4.628983, 4.734023, 4.902145, 4.890928, 4.941116, 5.018704, 5.081681, 4.974736, 5.024238, 5.018452, 5.038316, 5.06429, 5.029892, 5.102351, 5.112923, 5.160651, 5.199021, 5.174241, 5.208002, 5.210118, 5.263127, 5.23509, 5.262556, 5.255459, 5.269328, 5.300192, 5.342808, 5.333513, 5.330652, 5.342933, 5.346782, 5.400945, 5.372695, 5.401121, 5.399724, 5.465417, 5.451437]}


# def graph(dict, dict_name):
#     for k, v in dict.items():
#         xs = range(0, len(v))
#         ys = v
#         plt.plot(xs, ys, label=f"{k}")
#     plt.grid()
#     plt.xlabel("epoch")
#     plt.ylabel(f"{dict_name}")
#     plt.legend()
#     plt.show()


if __name__ == "__main__":
    # graph(acc_cifar10, "accuracy for cifar10")
    # graph(loss_cifar10, "loss for cifar10")
    # graph(acc_cifar100, "accuracy for cifar100")
    # graph(loss_cifar100, "loss for cifar100")
    test()